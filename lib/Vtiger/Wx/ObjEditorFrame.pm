# generated by wxGlade 0.6.3 on Fri Jan 21 14:32:40 2011
# To get wxPerl visit http://wxPerl.sourceforge.net/

use Wx 0.15 qw[:allclasses];
use strict;
package Vtiger::Wx::ObjEditorFrame;

use Wx qw[:everything];
use base qw(Wx::Frame);
use strict;

our $c;

# begin wxGlade: ::dependencies
# end wxGlade

sub new {
	my( $self, $description, $parent, $id, $title, $pos, $size, $style, $name ) = @_;
	$parent = undef              unless defined $parent;
	$id     = -1                 unless defined $id;
	$title  = ""                 unless defined $title;
	$pos    = wxDefaultPosition  unless defined $pos;
	$size   = wxDefaultSize      unless defined $size;
	$name   = ""                 unless defined $name;


	$style = wxDEFAULT_FRAME_STYLE 
		unless defined $style;

	$self = $self->SUPER::new( $parent, $id, $title, $pos, $size, $style, $name );


        $self->{description} = $description;
        $self->{object} = {};

########################################################

	$self->{topPanel} = Wx::Panel->new($self, -1, wxDefaultPosition, wxDefaultSize, );
	$self->{footPanel} = Wx::Panel->new($self->{topPanel}, -1, wxDefaultPosition, wxDefaultSize, );
	$self->{content_Panel} = Wx::Panel->new($self->{topPanel}, -1, wxDefaultPosition, wxDefaultSize, );
	$self->{headPanel} = Wx::Panel->new($self->{topPanel}, -1, wxDefaultPosition, wxDefaultSize, wxSUNKEN_BORDER|wxTAB_TRAVERSAL);
	$self->{title} = Wx::StaticText->new($self->{headPanel}, -1, "Object Editor", wxDefaultPosition, wxDefaultSize, wxALIGN_CENTRE);


	$self->{static_line_1} = Wx::StaticLine->new($self->{topPanel}, -1, wxDefaultPosition, wxDefaultSize, );
	$self->{cancelButton} = Wx::Button->new($self->{footPanel}, -1, "Cancel");
	$self->{saveButton} = Wx::Button->new($self->{footPanel}, -1, "Save");


#########################################################
#  CONTENT
        
	$self->{contentSizer} = Wx::FlexGridSizer->new(5, 4, 2, 2);
        my $i = 0;
        foreach my $field (@{$description->{fields}}){

#use Data::Dumper;
#print Dumper $field->{type};

            if ($field->{type}->{name} eq 'string'){
                #print $field->{label}."\n";
                $self->{"label_$i"} = Wx::StaticText->new($self->{content_Panel}, -1, $field->{label}, wxDefaultPosition, wxDefaultSize, );
                $self->{"text_ctrl_$i"} = Wx::TextCtrl->new($self->{content_Panel}, -1, $field->{label}, wxDefaultPosition, wxDefaultSize, );
	        $self->{contentSizer}->Add($self->{"label_$i"}, 0, 0, 0);
	        $self->{contentSizer}->Add($self->{"text_ctrl_$i"},0,0,0);
            }elsif($field->{type}->{name} eq 'date'){
                #print $field->{label}."DATA\n";
            }
            $i++;
        }

=for hack
	$self->{label_1} = Wx::StaticText->new($self->{content_Panel}, -1, "label_1", wxDefaultPosition, wxDefaultSize, );
	$self->{text_ctrl_1} = Wx::TextCtrl->new($self->{content_Panel}, -1, "", wxDefaultPosition, wxDefaultSize, );
	$self->{label_2} = Wx::StaticText->new($self->{content_Panel}, -1, "label_2", wxDefaultPosition, wxDefaultSize, );
	$self->{combo_box_1} = Wx::ComboBox->new($self->{content_Panel}, -1, "", wxDefaultPosition, wxDefaultSize, ["opt1", "opt2", "opt3"], wxCB_DROPDOWN);
	$self->{radio_btn_1} = Wx::RadioButton->new($self->{content_Panel}, -1, "radio_btn_1", wxDefaultPosition, wxDefaultSize, );
	$self->{radio_btn_2} = Wx::RadioButton->new($self->{content_Panel}, -1, "radio_btn_2", wxDefaultPosition, wxDefaultSize, );
	$self->{label_3} = Wx::StaticText->new($self->{content_Panel}, -1, "label_3", wxDefaultPosition, wxDefaultSize, );
	#use CustomWidget;
	#$self->{window_1} = CustomWidget->new($self->{content_Panel}, -1);

	$self->{contentSizer}->Add($self->{label_1}, 0, 0, 0);
	$self->{contentSizer}->Add($self->{text_ctrl_1}, 0, 0, 0);
	$self->{contentSizer}->Add($self->{label_2}, 0, 0, 0);
	$self->{contentSizer}->Add($self->{combo_box_1}, 0, 0, 0);
	$self->{contentSizer}->Add($self->{radio_btn_1}, 0, 0, 0);
	$self->{contentSizer}->Add($self->{radio_btn_2}, 0, 0, 0);
	$self->{contentSizer}->Add($self->{label_3}, 0, 0, 0);
	$self->{contentSizer}->Add($self->{window_1}, 1, wxEXPAND, 0);



=cut

#########################################################


	$self->__set_properties();
	$self->__do_layout();

	Wx::Event::EVT_BUTTON($self, $self->{cancelButton}->GetId, \&onCancel);
	Wx::Event::EVT_BUTTON($self, $self->{saveButton}->GetId, \&onSave);

# end wxGlade


	return $self;

}


sub __set_properties {
	my $self = shift;

# begin wxGlade: Vtiger::Wx::ObjEditorFrame::__set_properties

	$self->SetTitle("VTGUI");
	#$self->SetDescription(shift);
	#$self->SetObject(shift);
	#$self->{combo_box_1}->SetSelection(0);

# end wxGlade
}

sub __do_layout {
	my $self        = shift;

# begin wxGlade: Vtiger::Wx::ObjEditorFrame::__do_layout

	$self->{parentSizer} = Wx::BoxSizer->new(wxVERTICAL);
	$self->{mainSizer} = Wx::BoxSizer->new(wxVERTICAL);
	$self->{footSizer} = Wx::BoxSizer->new(wxHORIZONTAL);
	$self->{headSizer} = Wx::BoxSizer->new(wxHORIZONTAL);
	$self->{headSizer}->Add(120, 20, 0, wxALIGN_CENTER_HORIZONTAL, 0);
	$self->{headSizer}->Add($self->{title}, 0, wxALIGN_CENTER_HORIZONTAL, 0);
	$self->{headSizer}->Add(120, 20, 0, wxALIGN_CENTER_HORIZONTAL, 0);
	$self->{headPanel}->SetSizer($self->{headSizer});
	$self->{mainSizer}->Add($self->{headPanel}, 0, wxALL|wxALIGN_CENTER_HORIZONTAL, 0);

=for hack

=cut

	$self->{content_Panel}->SetSizer($self->{contentSizer});
	$self->{contentSizer}->AddGrowableRow(4);
	$self->{contentSizer}->AddGrowableCol(1);
	$self->{mainSizer}->Add($self->{content_Panel}, 1, wxEXPAND, 0);
	$self->{mainSizer}->Add($self->{static_line_1}, 0, wxEXPAND, 0);
	$self->{footSizer}->Add(120, 20, 0, 0, 0);
	$self->{footSizer}->Add($self->{cancelButton}, 0, 0, 0);
	$self->{footSizer}->Add($self->{saveButton}, 0, 0, 0);
	$self->{footSizer}->Add(120, 20, 0, 0, 0);
	$self->{footPanel}->SetSizer($self->{footSizer});
	$self->{mainSizer}->Add($self->{footPanel}, 0, wxALL|wxALIGN_CENTER_HORIZONTAL, 2);
	$self->{topPanel}->SetSizer($self->{mainSizer});
	$self->{parentSizer}->Add($self->{topPanel}, 1, wxEXPAND, 0);
	$self->SetSizer($self->{parentSizer});
	$self->{parentSizer}->Fit($self);
	$self->Layout();

# end wxGlade
}

sub onCancel {
	my ($self, $event) = @_;
# wxGlade: Vtiger::Wx::ObjEditorFrame::onCancel <event_handler>
        
	warn "Event handler (onCancel) not implemented";
	$event->Skip;
        $self->Close();
# end wxGlade
}


sub onSave {
	my ($self, $event) = @_;
# wxGlade: Vtiger::Wx::ObjEditorFrame::onSave <event_handler>

	warn "Event handler (onSave) not implemented";


#use Data::Dumper;
#print Dumper $self->{object};
        my $description = $self->{description};
        my $obj = {};
        my $i = 0;
        foreach my $field (@{$description->{fields}}){

#use Data::Dumper;
#print Dumper $field->{type};

            if ($field->{type}->{name} eq 'string'){
                $obj->{$field->{name}}=$self->{"text_ctrl_$i"}->GetValue();
            }elsif($field->{type}->{name} eq 'date'){
                #print $field->{label}."DATA\n";
            }
            $i++;
        }


        $self->{object} = $obj;
	$event->Skip;
        $self->Close();
# end wxGlade
}


sub loadObject{
        my ($self, $obj) = @_;
        $self->{object} = $obj;

#use Data::Dumper;
#print Dumper $self->{object};


}

sub getObject{
        my ($self) = @_;


#use Data::Dumper;
#print Dumper $self->{object};


        return $self->{object};
}



# end of class Vtiger::Wx::ObjEditorFrame

1;

